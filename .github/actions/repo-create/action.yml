name: repo-create
inputs:
  instance:
    description: "GitHub Instance"
    required: true
  organization:
    description: "GitHub Organization"
    required: true
  repository:
    description: "GitHub Repository"
    required: true
  visibility:
    description: "GitHub Repository Visibility (private/internal)"
    required: true
  readme:
    description: "GitHub README enabled"
    required: false
  description:
    description: "GitHub Repository Description"
    required: true

runs:
  using: composite
  steps:
    - name: create a repository
      shell: bash
      run: |
        data=$(gh repo create \
          ${{ inputs.organization }}/${{ inputs.repository }} \
          --${{ inputs.visibility }} \
          `[[ "${{ inputs.readme }}" == "["Enable"]" ]] && echo --add-readme` \
          --description "${{ inputs.description }}")
        if [[ $? -eq 0 ]]; then
          user=$(gh api /repos/${{ inputs.organization }}/${{ inputs.repository }}/collaborators/${{ github.actor }} \
              --method PUT \
              -f permission='admin')
          if [[ $? -eq 0 ]]; then
            json_data=$(jq -nc '{ "msg": "created repository successfully", "status": "success" }')
            echo -e "RESULT=$json_data" >> $GITHUB_ENV
          else
            json_data=$(jq -nc --argjson error "$data" '{ "msg": "unable to add user to repository", "status": "error": $user }')
            echo -e "RESULT=$json_data" >> $GITHUB_ENV
          fi
        else
          json_data=$(jq -nc --argjson error "$data" '{ "msg": "unable to create repository", "status": "error": $data }')
          echo -e "RESULT=$json_data" >> $GITHUB_ENV
        fi        